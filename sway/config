set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term kitty
set $menu tofi-run | xargs swaymsg exec --

set $lock swaylock -f -c 000000

# borders
default_border pixel 1
default_floating_border pixel 1

hide_edge_borders none

bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

font xft:JetBrains Mono 10

# gaps
gaps inner 15
gaps outer -5

floating_modifier $mod

bindsym $mod+Return exec $term
bindsym $mod+w exec flatpak run app.zen_browser.zen
bindsym $mod+d exec $menu
bindsym $mod+s exec sioyek
bindsym $mod+c exec code-oss
bindsym $mod+f exec foliate
bindsym $mod+o exec flatpak run com.logseq.Logseq
bindsym Print exec grim -g "$(slurp)"
bindsym $mod+Print exec sway-screenshot -m output
# window kill command
bindsym $mod+q kill

# Exit sway (log user out of wayland sess) 
bindsym $mod+Shift+e exec swaynag -t warning -m 'Exit Sway' -B 'Yes exit sway' 'swaymsg exit'

# change focus
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+h focus left

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
# bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth


# toggle fullscreen mode for the focused container
#bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+v layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
# bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# workspaces
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

bindsym $mod+p move workspace to output right

# Open specific applications in floating mode
for_window [class="GParted"] floating enable border normal
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [app_id="pavucontrol"] floating enable
for_window [class="Arandr"] floating enable
for_window [class="pomotroid"] floating enable sticky enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# Set shut down, restart and locking features
set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec systemctl suspend, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"
    bindsym Shift+r exec systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+0 mode "$mode_system"

# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
# These bindings trigger as soon as you enter the resize mode
# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
    bindsym j resize shrink width 5 px or 5 ppt
    bindsym k resize grow height 5 px or 5 ppt
    bindsym l resize shrink height 5 px or 5 ppt
    bindsym semicolon resize grow width 5 px or 5 ppt

# same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

# exit resize mode: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# ayu color
# class                 border      bground text    indicator child_border
client.focused          #707a8cb3 #707a8cb3 #CBCCC6 #707a8cb3   #707a8cb3
client.focused_inactive #323a4c #323a4c #CBCCC6 #323a4c   #323a4c
client.unfocused        #323a4c #323a4c #888888 #323a4c   #323a4c
client.urgent           #2F343A #FF3333 #CBCCC6 #900000   #900000
client.placeholder      #1F2430 #1F2430 #CBCCC6 #000000   #0C0C0C
client.background       #1F2430

# hotkeys for some program
bindsym $mod+Shift+w exec kitty -e nmtui

# auto-start applications
exec xfce4-power-manager
exec ibus-daemon -drxR
exec_always bash $HOME/.config/waybar/waybar.sh

# volume button
bindsym XF86AudioRaiseVolume exec amixer -c 0 -q set Master 2dB+ unmute
bindsym XF86AudioLowerVolume exec amixer -c 0 -q set Master 2db- unmute
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

# backlight
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+

# touchpad on and off controller on laptop with Fn+<touchpad control functional key>
bindsym XF86TouchpadOn exec synclient Touchpadoff=0
bindsym XF86TouchpadOff exec synclient Touchpadoff=1

# us
input type:keyboard {
    xkb_layout es 
}

exec swayidle -w \
    timeout 300 'swaylock -f -c 000000' \
    timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -c 000000'

# wallpaper
output * bg #1f2430 solid_color

# gtk themes
set $gnome-schema org.gnome.desktop.interface

# monitors
output DP-2 pos 1920 0 res 2560x1080
output eDP-1 pos 0 0 res 1920x1080

exec_always {
    gsettings set $gnome-schema gtk-theme 'Aritim-Dark'
    gsettings set $gnome-schema icon-theme 'Arc'
    gsettings set $gnome-schema cursor-theme 'Adwaita'
    gsettings set $gnome-schema font-name 'Cantarell 10'
}
